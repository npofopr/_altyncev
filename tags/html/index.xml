<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>html on Altyncev Vladislav</title><link>https://altyncev.ru/tags/html/</link><description>Recent content in html on Altyncev Vladislav</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 16 Nov 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://altyncev.ru/tags/html/index.xml" rel="self" type="application/rss+xml"/><item><title>Вопросы и ответы для собеседования на верстальщика</title><link>https://altyncev.ru/blog/2017-11-16-csslover-job-interview/</link><pubDate>Thu, 16 Nov 2017 00:00:00 +0000</pubDate><guid>https://altyncev.ru/blog/2017-11-16-csslover-job-interview/</guid><description>&lt;p>Попробую ответить на вопросы, который у Вас могут спросить на собеседовании, на должность верстальщика.&lt;/p>
&lt;p>&lt;img src="https://altyncev.ru/img/2017/11/45332139-5e21-4c69-8a4a-f8741a7cfd8c.gif" alt="Когда на собеседовании тебе показали кто тут Senior" />&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h2 id="вопросы">Вопросы&lt;/h2>
&lt;blockquote>
&lt;p>Какие бывают значения display? Расскажите как ведёт себя каждое свойство.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-css" data-lang="css"> &lt;span class="nt">display&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">block&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nt">inline&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nt">inline-block&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nt">inline-table&lt;/span> &lt;span class="o">|&lt;/span>
&lt;span class="nt">inline-flex&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nt">flex&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nt">list-item&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nt">none&lt;/span> &lt;span class="o">|&lt;/span>
&lt;span class="nt">run-in&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nt">table&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nt">table-caption&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nt">table-cell&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nt">table-column-group&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nt">table-column&lt;/span> &lt;span class="o">|&lt;/span>
&lt;span class="nt">table-footer-group&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nt">table-header-group&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nt">table-row&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nt">table-row-group&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;!-- raw HTML omitted -->Подробнее&lt;!-- raw HTML omitted -->&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h3 id="block">block&lt;/h3>
&lt;p>Элемент показывается как блочный. Применение этого значения для строчных элементов, например &lt;code>&amp;lt;span&amp;gt;&lt;/code>, заставляет его вести подобно блокам — происходит перенос строк в начале и в конце содержимого.&lt;/p>
&lt;h3 id="inline">inline&lt;/h3>
&lt;p>Элемент отображается как строчный. Использование блочных элементов, таких, как &lt;code>&amp;lt;div&amp;gt;&lt;/code> и &lt;code>&amp;lt;p&amp;gt;&lt;/code>, автоматически создаёт перенос и показывает их содержимое с новой строки. Значение inline отменяет эту особенность, поэтому содержимое блочных элементов начинается с того места, где окончился предыдущий элемент.&lt;/p>
&lt;h3 id="inline-block">inline-block&lt;/h3>
&lt;p>Это значение генерирует блочный элемент, который обтекается другими элементами веб-страницы подобно строчному элементу. Фактически такой элемент по своему действию похож на встраиваемые элементы (вроде &lt;code>&amp;lt;img&amp;gt;&lt;/code>). При этом его внутренняя часть форматируется как блочный элемент, а сам элемент — как строчный.&lt;/p>
&lt;h3 id="inline-table">inline-table&lt;/h3>
&lt;p>Определяет, что элемент является таблицей, как при использовании &lt;code>&amp;lt;table&amp;gt;&lt;/code>, но при этом таблица является строчным элементом и происходит её обтекание другими элементами, например, текстом.&lt;/p>
&lt;h3 id="inline-flex">inline-flex&lt;/h3>
&lt;p>Элемент ведёт себя как строчный и выкладывает содержимое согласно флекс-модели.&lt;/p>
&lt;h3 id="flex">flex&lt;/h3>
&lt;p>Элемент ведёт себя как блочный и выкладывает содержимое согласно флекс-модели.&lt;/p>
&lt;h3 id="list-item">list-item&lt;/h3>
&lt;p>Элемент выводится как блочный и добавляется маркер списка.
none
Временно удаляет элемент из документа. Занимаемое им место не резервируется, и веб-страница формируется так, словно элемента и не было. Изменить значение и сделать вновь видимым элемент можно с помощью скриптов, обращаясь к свойствам через объектную модель. В этом случае происходит переформатирование данных на странице с учётом вновь добавленного элемента.&lt;/p>
&lt;h3 id="run-in">run-in&lt;/h3>
&lt;p>Устанавливает элемент как блочный или строчный, в зависимости от контекста.&lt;/p>
&lt;h3 id="table">table&lt;/h3>
&lt;p>Определяет, что элемент является блочной таблицей, подобно использованию &lt;code>&amp;lt;table&amp;gt;&lt;/code>.&lt;/p>
&lt;h3 id="table-caption">table-caption&lt;/h3>
&lt;p>Задаёт заголовок таблицы, подобно применению &lt;code>&amp;lt;caption&amp;gt;&lt;/code>.&lt;/p>
&lt;h3 id="table-cell">table-cell&lt;/h3>
&lt;p>Указывает, что элемент представляет собой ячейку таблицы (&lt;code>&amp;lt;td&amp;gt;&lt;/code> или &lt;code>&amp;lt;th&amp;gt;&lt;/code>).&lt;/p>
&lt;h3 id="table-column">table-column&lt;/h3>
&lt;p>Назначает элемент колонкой таблицы, словно был добавлен &lt;code>&amp;lt;col&amp;gt;&lt;/code>.&lt;/p>
&lt;h3 id="table-column-group">table-column-group&lt;/h3>
&lt;p>Определяет, что элемент является группой одной или более колонок таблицы, как при использовании &lt;code>&amp;lt;colgroup&amp;gt;&lt;/code>.&lt;/p>
&lt;h3 id="table-footer-group">table-footer-group&lt;/h3>
&lt;p>Используется для хранения одной или нескольких строк ячеек, которые отображаются в самом низу таблицы. По своему действию сходно с работой &lt;code>&amp;lt;tfoot&amp;gt;&lt;/code>.&lt;/p>
&lt;h3 id="table-header-group">table-header-group&lt;/h3>
&lt;p>Элемент предназначен для хранения одной или нескольких строк ячеек, которые представлены вверху таблицы. По своему действию сходно с работой &lt;code>&amp;lt;thead&amp;gt;&lt;/code>.&lt;/p>
&lt;h4 id="table-row">table-row&lt;/h4>
&lt;p>Элемент отображается как строка таблицы (&lt;code>&amp;lt;tr&amp;gt;&lt;/code>).&lt;/p>
&lt;h3 id="table-row-group">table-row-group&lt;/h3>
&lt;p>Создаёт структурный блок, состоящий из нескольких строк таблицы, аналогично действию &lt;code>&amp;lt;tbody&amp;gt;&lt;/code>.&lt;/p>
&lt;!-- raw HTML omitted --></description></item><item><title>Руководство по оформлению HTML/CSS кода от Google</title><link>https://altyncev.ru/blog/2012-05-09-oformlenie-html-css-ot-google/</link><pubDate>Sat, 09 May 2015 00:00:00 +0000</pubDate><guid>https://altyncev.ru/blog/2012-05-09-oformlenie-html-css-ot-google/</guid><description>Введение Это руководство описывает правила для оформления и форматирования HTML и CSS кода. Его цель — повысить качество кода и облегчить совместную работу и поддержку инфраструктуры.
Это относится к рабочим версиям файлов использующих HTML, CSS и GSS
Разрешается использовать любые инструменты для минификации компиляции или обфускации кода, при условии, что общее качество кода будет сохранено.
Общие правила оформления &amp;nbsp;
Протокол Не указывайте протокол при включении ресурсов на страницу.</description></item><item><title>Небольшая записка css. Чтобы помнить</title><link>https://altyncev.ru/blog/2013-07-10-min_css_note/</link><pubDate>Wed, 10 Jul 2013 00:00:00 +0000</pubDate><guid>https://altyncev.ru/blog/2013-07-10-min_css_note/</guid><description>Расширяем свой reset.css и зарещаем масштабирование сайта.
Расширьте reset.css
К стандартному reset.css будет полезно добавить стиль переопределяющий выделение елементов при тапах. Это выглядит не кравсиво и не нейтив
*:not(html) { -webkit-user-select: none; -moz-user-select: none; user-select: none; -webkit-tap-highlight-color: rgba(255, 255, 255, 0); } Запрещайте масштабирование
Вставив в тег head следующий тег вы запретите масштабирование и получите возможность трекать жесты.
&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;user-scalable=no, width=device-width, initial-scale=1, maximum-scale=1&amp;quot;&amp;gt;</description></item><item><title>Как я стал верстальщиком</title><link>https://altyncev.ru/blog/2013-05-08-how_i_became_a_makeup/</link><pubDate>Wed, 08 May 2013 00:00:00 +0000</pubDate><guid>https://altyncev.ru/blog/2013-05-08-how_i_became_a_makeup/</guid><description>Как я до такого докатился?
Я очень часто бываю на форуме htmlbook.ru, даже отслеживаю все новые сообщения, не ради того, чтобы скорее бежать помогать и набивать репутацию, а чтобы, возможно, найти решения, от своих проблем, которые иногда возникают, да и вообще, там много знающих людей и порой бывает интересно почитать их комментарии.
Версткой я занялся, учась в колледже, то ли курсовую делал, то ли диплом, точно не помню. Но началось все именно от туда.</description></item><item><title>Коллекция полезных css-снипетов</title><link>https://altyncev.ru/blog/2013-04-24-a_collection_of_handy_css_snippets/</link><pubDate>Wed, 24 Apr 2013 00:00:00 +0000</pubDate><guid>https://altyncev.ru/blog/2013-04-24-a_collection_of_handy_css_snippets/</guid><description>Не начинайте ваш проект с пустой таблицы стилей. Есть много интересных сниппетов, которые могут облегчить вам жизнь и ускорить веб-разработку.
Часто используемые классы Самые распространённые:
.float-left /* прижимаем блок влево */ { float: left; } .float-right /* прижимаем блок вправо */ { float: right; } .hide /* прячем блок */ { display: none; } .show /* показываем блок */ { display: block; } Думаю, разъяснять тут ничего не надо. Это базовые стили, и их каждый должен знать и использовать.</description></item><item><title>Визуальный css transition</title><link>https://altyncev.ru/blog/2013-03-05-visualize_and_manipulate_css_transition/</link><pubDate>Tue, 05 Mar 2013 00:00:00 +0000</pubDate><guid>https://altyncev.ru/blog/2013-03-05-visualize_and_manipulate_css_transition/</guid><description>Смотрим css3 анимацию &amp;ldquo;online&amp;rdquo; на cssglue.com
И еще пару ссылок с визуальным представлением css транформаций
http://learn.shayhowe.com/advanced-html-css/transitions-animations http://darsa.in/motio/ http://leaverou.github.com/animatable/ http://www.jcsml.com http://maccman.github.com/gfx/</description></item><item><title>Полезные техники HTML, CSS</title><link>https://altyncev.ru/blog/2013-03-05-html_css_js_tehniki/</link><pubDate>Tue, 05 Mar 2013 00:00:00 +0000</pubDate><guid>https://altyncev.ru/blog/2013-03-05-html_css_js_tehniki/</guid><description>Несколько заметок, для себя. Всё это вы наверняка видели и сможете в легкую найти на хабре.
1. Google Chrome Frame Появилась возможность обходить сложности связанные с Internet Explorer, благодаря Google Chrome Frame. С тех пор, как Google ввел его в 2010 году, Google Chrome Frame стал популярнейшим дополнением для поддержки HTML5 в браузере Internet Explorer. Во всех версиях IE можно добавить Chrome Frame для чего достаточно добавить следующий -тэг в тэге нашего сайта.</description></item><item><title>Масштабируемое видео</title><link>https://altyncev.ru/blog/2012-12-27-responsive_video/</link><pubDate>Thu, 27 Dec 2012 00:00:00 +0000</pubDate><guid>https://altyncev.ru/blog/2012-12-27-responsive_video/</guid><description> Очень простой CSS и&amp;nbsp;HTML, и&amp;nbsp;ваше embed-видео будет масштабироваться в&amp;nbsp;соответствии с&amp;nbsp;шириной страницы:
css:
.video { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; } .video iframe, .video object, .video embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }</description></item><item><title>Делаем «3D» ссылки</title><link>https://altyncev.ru/blog/2012-12-16-3d_links/</link><pubDate>Sun, 16 Dec 2012 00:00:00 +0000</pubDate><guid>https://altyncev.ru/blog/2012-12-16-3d_links/</guid><description>Сделать вот такую красивую ссылку достаточно просто.
Скажу сразу, работает только в Chrome и FF, ну и почти в IE10, Opera отказалась.
1. Делаем конструкцию &amp;lt;a&amp;gt;&amp;lt;span data-title=&amp;#34;название ссылки&amp;#34;&amp;gt;название ссылки&amp;lt;&amp;#47;span&amp;gt;&amp;lt;&amp;#47;a&amp;gt;
2. Добавляем в css следущее:
Для тега &amp;lt;a&amp;gt;:
a { display: inline-block; overflow: hidden; vertical-align: top; -webkit-perspective: 600px; -moz-perspective: 600px; -ms-perspective: 600px; perspective: 600px; -webkit-perspective-origin: 50% 50%; -moz-perspective-origin: 50% 50%; -ms-perspective-origin: 50% 50%; perspective-origin: 50% 50%; } Для тега &amp;lt;span&amp;gt;:</description></item><item><title>Несколько ошибок и рекомендаций, которые должен знать веб-разработчик</title><link>https://altyncev.ru/blog/2012-12-13-error_web_development/</link><pubDate>Thu, 13 Dec 2012 00:00:00 +0000</pubDate><guid>https://altyncev.ru/blog/2012-12-13-error_web_development/</guid><description>5 встречающихся ошибок, которые должен знать разработчик.
#1 Link outlines / highlights смещаются Kindle Fire Проблема:
Fix:
text-rendering: optimizeLegibility; position: relative; -webkit-box-sizing: border-box; #2 Баг с зумом при смене ориентации на iOS Решение: (function(a){function m(){d.setAttribute("content",g),h=!0}function n(){d.setAttribute("content",f),h=!1}function o(b){l=b.accelerationIncludingGravity,i=Math.abs(l.x),j=Math.abs(l.y),k=Math.abs(l.z),(!a.orientation||a.orientation===180)&amp;&amp;(i7||(k6&amp;&amp;j5)?h&amp;&amp;n():h||m()}var b=navigator.userAgent;if(!(/iPhone|iPad|iPod/.test(navigator.platform)&amp;&amp;/OS [1-5]_[0-9_]* like Mac OS X/i.test(b)&amp;&amp;b.indexOf("AppleWebKit")-1))return;var c=a.document;if(!c.querySelector)return;var d=c.querySelector("meta[name=viewport]"),e=d&amp;&amp;d.getAttribute("content"),f=e+",maximum-scale=1",g=e+",maximum-scale=10",h=!0,i,j,k,l;if(!d)return;a.addEventListener("orientationchange",m,!1),a.addEventListener("devicemotion",o,!1)})(this); #3 WebKit игнорирует цвет фона элемента при печати документа Решение:
-webkit-print-color-adjust: exact; Oтключить диалоги, которые появляются при нажатии на элемент слишком долго на мобильных браузеров Проблема:</description></item><item><title>Emmet</title><link>https://altyncev.ru/blog/2012-11-23-emmet/</link><pubDate>Fri, 23 Nov 2012 00:00:00 +0000</pubDate><guid>https://altyncev.ru/blog/2012-11-23-emmet/</guid><description>
&lt;p>Решил я тут взяться за &lt;a href="http://github.com/sergeche/emmet-sublime">Emmet&lt;/a>, это продолжатель Zen-Coding.&lt;/p>
&lt;p>Хорошая штука в общем)&lt;/p>
&lt;!-- Read more -->
&lt;p>&lt;sub>PS: данный текст не служит мануалом или еще чем то, это просто черновик, для себя, чтобы не забыть.&lt;/sub>&lt;/p>
&lt;h3>Горячие клавиши:&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Tab or Ctrl+E&lt;/strong> - развершуть аббревиатуру&lt;/li>
&lt;li>&lt;strong>Ctrl+Alt+Enter&lt;/strong> - интерактивное использование Эммета&lt;/li>
&lt;li>&lt;strong>Ctrl+, (PC)&lt;/strong> - выделение блоков&lt;/li>
&lt;li>&lt;strong>Ctrl+Alt+,&lt;/strong> - обратное выделение блоков)&lt;/li>
&lt;li>&lt;strong>Ctrl+Alt+J&lt;/strong> - перейти к начлу/концу блока&lt;/li>
&lt;li>&lt;strong>Shift+Ctrl+G&lt;/strong> - обернуть элемент в аббревиатуру&lt;/li>
&lt;li>&lt;strong>Shift+Ctrl+/&lt;/strong> - закомментировать&lt;/li>
&lt;li>&lt;strong>Shift+Ctrl+`&lt;/strong> - выделение начинающего и завершающего тэга, чтобы быстро сменить, например "p" на "span"&lt;/li>
&lt;li>&lt;strong>Shift+Ctrl+;&lt;/strong> - удаление тэга, не завтрагивая внутренностей (внутреннего содержимого)&lt;/li>
&lt;li>&lt;strong>Ctrl+U&lt;/strong> - обновление/задание размеров картинки&lt;/li>
&lt;li>&lt;strong>Shift+Ctrl+Y&lt;/strong> - вычисление математический операций ("2*6", "2 10\3", "20+10*4")&lt;/li>
&lt;li>&lt;strong>Shift+Ctrl+R&lt;/strong> - если в одном из префиксе изменить значение, то оно автоматом изменится во всех остальных. (если сменить border-radius:10px, нажать, то автоматом сменятся и -web- и -webkit-)&lt;/li>
&lt;li>&lt;strong>Ctrl+'&lt;/strong> - переводим img в data:URL формат&lt;/li>
&lt;li>&lt;strong>Shift+Ctrl+'&lt;/strong> - переименовываем тэг&lt;/li>
&lt;/ul>
&lt;div></description></item><item><title>Разные формы на CSS</title><link>https://altyncev.ru/blog/2012-10-08-raznii_formi_na_css/</link><pubDate>Mon, 08 Oct 2012 00:00:00 +0000</pubDate><guid>https://altyncev.ru/blog/2012-10-08-raznii_formi_na_css/</guid><description>Рассмотрим следующий код, чтобы сделать формы на CSS.
Браузеры, которые поддерживают: IE9, Chrome, Safari, Firefox, Opera.
&amp;nbsp;
Квадрат
#square { width: 100px; height: 100px; background: #000; } Прямоугольник
#rectangle { width: 200px; height: 100px; background: #000; } Круг
#circle { width: 100px; height: 100px; background: #000; -moz-border-radius: 50px; -webkit-border-radius: 50px; border-radius: 50px; } &amp;nbsp;Овал
#oval { width: 200px; height: 100px; background: #000; -moz-border-radius: 100px / 50px; -webkit-border-radius: 100px / 50px; border-radius: 100px / 50px; } Треугольник</description></item><item><title>Responsive fixed block</title><link>https://altyncev.ru/blog/2012-08-29-responsive_fixed_block/</link><pubDate>Wed, 29 Aug 2012 00:00:00 +0000</pubDate><guid>https://altyncev.ru/blog/2012-08-29-responsive_fixed_block/</guid><description>Ура ура! Как раз искал такое решение и оно нашлось :-)
Суть такая: нужен был fixed sidebar, но если блок fixed, то при уменьшении экрана по высоте он начинает "съедаться", нужно было это как то решать.
Есть 2 способа решения:
С помощью @media screen; И с помощью jquery. C @media screen это будет примерно так:
@media screen and (min-height: 768px) { } А с jquery так:
jQuery(document).ready(function($) { $(document).</description></item></channel></rss>